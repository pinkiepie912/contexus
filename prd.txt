# Feature 1: 플로팅 액션 버튼 (Floating Action Button - FAB)

## Task 1.1: FAB 컴포넌트 생성
ACTION: shadcn/ui의 Button을 기반으로 원형의 플로팅 버튼을 생성합니다. 내부에는 Contexus 로고 아이콘을 포함합니다. position: fixed, bottom: 48px, right: 48px, z-index: 99999, width: 55px, height: 55px 스타일을 적용합니다. 
ACTION: Shadow가 들어가야 합니다. Background 색상은 파란색 계열로 설정하고, 로고는 흰색 Cx 가 들어가야 합니다.
ACTION: 플로팅 버튼을 클릭하면 sidePanel이 열리도록 합니다.
ACTION: 브라우저 창의 크기를 조절할 때, FAB가 화면 밖으로 나가지 않도록 합니다.

## Task 1.2: FAB 페이지 삽입
ACTION: 사이트 어댑터가 활성화되면, 페이지에 Shadow DOM 루트를 생성하고 그 안에 FloatingActionButton 컴포넌트를 렌더링합니다.

## Task 1.3: FAB 위치 이동 기능
ACTION: 드래그 앤 드롭 이벤트를 처리하여 사용자가 FAB의 위치를 화면 내에서 자유롭게 이동시킬 수 있도록 구현합니다. 최종 위치는 localStorage에 저장하여 세션 간 유지되도록 합니다.


# Feature 2: 클립보드 감지 및 활성화

## Task 2.1: 클립보드 이벤트 리스너 추가
ACTION: document에 copy 이벤트 리스너를 추가합니다.

## Task 2.2: 클립보드 내용 읽기 및 유효성 검사
ACTION: copy 이벤트 발생 시, setTimeout으로 짧은 딜레이 후 navigator.clipboard.readText()를 호출합니다. 복사된 텍스트가 1자 이상일 경우에만 다음 단계를 진행하는 유효성 검사 로직을 추가합니다.

## Task 2.3: FAB 상태 변경
ACTION: 유효한 텍스트가 복사되면, FloatingActionButton 컴포넌트의 상태(state)를 active로 변경하는 메시지를 보냅니다.


# Feature 3: 컨텍스츄얼 툴팁 (Contextual Tooltip)
## Task 3.1: 툴팁 컴포넌트 생성
ACTION: shadcn/ui의 Tooltip 또는 Popover를 기반으로 커스텀 툴팁을 생성합니다. 툴팁에는 "Copy to Contexus" 문구와 [Context], [Template], [Example], [Role] 네 개의 작은 버튼과 X버튼이 포함됩니다.

## Task 3.2: 툴팁 표시 및 애니메이션
ACTION: FAB의 상태가 active로 변경되면, CSS 애니메이션(예: 부드럽게 반짝이는 효과)을 적용하고, CaptureTooltip을 FAB 옆에 표시합니다.

## Task 3.3: 툴팁 자동 숨김
ACTION: 툴팁은 7초 후에 자동으로 사라지도록 setTimeout을 설정합니다. 사용자가 툴팁이나 FAB와 상호작용하면 타이머를 초기화합니다.

# Feature 4: Side Panel 연동 및 저장
## Task 4.1: 백그라운드로 메시지 전송
ACTION: 툴팁 내의 버튼(예: [Context])을 클릭하면, 복사된 내용과 **선택된 타입('context')**을 페이로드에 담아 백그라운드 스크립트로 CREATE_ELEMENT 메시지를 전송합니다.

## Task 4.2: 백그라운드에서 Side Panel 제어
ACTION: OPEN_SIDEPANEL_FOR_SAVE 메시지를 수신하면, chrome.sidePanel.open()을 호출하여 Side Panel을 엽니다.

## Task 4.3: Side Panel에 데이터 전달 및 UI 상태 변경
ACTION (Background): Side Panel이 열린 후, chrome.runtime.sendMessage를 사용하여 Side Panel의 App.tsx로 PREFILL_NEW_ELEMENT 타입의 메시지와 페이로드(타입, 내용)를 전달합니다.

ACTION (Side Panel): App.tsx에서 PREFILL_NEW_ELEMENT 메시지를 수신하는 리스너를 구현합니다. 메시지를 받으면, UI 상태를 '새 엘리먼트 생성' 모드로 전환하고, 전달받은 타입과 내용으로 폼을 미리 채워 목록 최상단에 표시합니다.

## Task 4.4: SidePanel에 새 엘리먼트 폼 생성
사용자가 웹 페이지에서 텍스트를 복사한 후, 나타난 툴팁에서 [컨텍스트로 저장] 버튼을 클릭합니다.
Side Panel이 열리고(이미 열려있다면 그대로 유지), 화면이 목록 최상단으로 자동 스크롤됩니다.
기존 엘리먼트 목록 위에, 새로운 엘리먼트를 저장하기 위한 **'빠른 저장 폼'**이 나타납니다. 이 폼은 다른 카드들과 시각적으로 구분됩니다(예: 하이라이트된 배경색).

폼 내부의 '트리거 태그' 입력창이 자동으로 포커스됩니다. 다른 모든 정보는 이미 채워져 있습니다.
사용자는 고유한 트리거 태그(예: /v4_config)를 입력합니다. (선택적으로 일반 태그도 추가할 수 있습니다.)

사용자가 [save] 버튼을 클릭합니다.
'빠른 저장 폼'이 사라지고, 방금 저장된 엘리먼트가 목록 최상단에 일반 카드로 부드럽게 추가됩니다. 사용자는 즉시 다음 작업을 이어갈 수 있습니다.

@src/types.ts 의 Element 인터페이스를 참고해서 구현합니다.


5. 비기능 요구사항 (Non-Functional Requirements)
성능: copy 이벤트 리스너는 페이지 성능에 최소한의 영향을 주어야 합니다.

보안: manifest.ts에 "clipboardRead" 권한을 추가하고, 사용자에게 이 권한이 왜 필요한지 명확히 설명해야 합니다.

사용자 설정: 사용자가 설정에서 '클립보드 감지 기능'을 켜고 끌 수 있는 옵션을 제공해야 합니다.

6. 디자인 및 UX 상세 (Design & UX Details)
FAB 애니메이션: 부드럽게 커졌다 작아지는 '숨쉬는' 효과 또는 은은한 파란색 box-shadow가 깜빡이는 효과를 적용합니다.

툴팁: shadcn/ui의 기본 스타일을 따르며, 부드러운 fade-in/fade-out 전환 효과를 가집니다.

Side Panel: PREFILL_NEW_ELEMENT 상태일 때, 생성 중인 엘리먼트 폼이 목록의 다른 카드들과 시각적으로 구분되도록 배경색이나 테두리로 강조 표시합니다.
